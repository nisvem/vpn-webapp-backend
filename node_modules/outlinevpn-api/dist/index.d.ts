import type { User, Server, DataUsageByUser, ServerMetrics, Options } from "./types";
declare class OutlineVPN {
    apiUrl: string;
    fingerprint: string;
    timeout?: number;
    constructor(options: Options);
    private fetch;
    getServer(): Promise<Server>;
    renameServer(name: string): Promise<boolean>;
    setDefaultDataLimit(bytes: number): Promise<boolean>;
    deleteDefaultDataLimit(): Promise<boolean>;
    setHostnameForAccessKeys(hostname: string): Promise<boolean>;
    setPortForNewAccessKeys(port: number): Promise<boolean>;
    getDataUsage(): Promise<DataUsageByUser>;
    getDataUserUsage(id: string): Promise<number>;
    getShareMetrics(): Promise<ServerMetrics>;
    setShareMetrics(metricsEnabled: boolean): Promise<boolean>;
    getUsers(): Promise<User[]>;
    getUser(id: string): Promise<User | null>;
    createUser(): Promise<User>;
    deleteUser(id: string): Promise<boolean>;
    renameUser(id: string, name: string): Promise<boolean>;
    addDataLimit(id: string, bytes: number): Promise<boolean>;
    deleteDataLimit(id: string): Promise<boolean>;
    disableUser(id: string): Promise<boolean>;
    enableUser(id: string): Promise<boolean>;
}
export { OutlineVPN };
